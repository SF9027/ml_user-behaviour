# Data

```{r, echo = FALSE, message = FALSE}
source(here::here("scripts/setup.R"))
```

## Source

We found a dataset about the user behavior of "global C2C online fashion store" from Kaggle Web.The dataset contains records of over 9 million registered users fromthis successful online C2C fashion store that were launched in Europe around 2009 and subsequently expanded globally. The link of this dataset is "https://www.kaggle.com/datasets/thedevastator/global-c2c-fashion-store-user-behaviour-analysis".

```{r}
userdataset_orig <- read.csv(here::here("data/users.dataset.public.csv"))
```

## Description

- identifierHash: Hash of the user's id

- type: The type of entity

- country: User's country (written in french)

- language: The user's preferred language.

- socialNbFollowers: Number of users who subscribed to this user's activity. New accounts are automatically followed by the store's official accounts.

- socialNbFollows: Number of user account this user follows. New accounts are automatically assigned to follow the official partners.

- socialProductsLiked: Number of products this user liked.

- productsListed: Number of currently unsold products that this user has uploaded.

- productsSold: Number of products this user has sold.

- productsPassRate: % of products meeting the product description. (Sold products are reviewed by the store's team before being shipped to the buyer.)

- productsWished: Number of products this user added to his/her wishlist.

- productsBought: Number of products this user bought.

- gender: user's gender

- civilityGenderId: civility title as integer, "1" means "mr", "2" means "mrs" and "3" means "miss".

- civilityTitle: Civility title

- hasAnyApp: User has ever used any of the store's official app.

- hasAndroidApp: User has ever used the official Android app.

- hasIosApp: User has ever used the official iOS app.

- hasProfilePicture: User has a custom profile picture.

- daysSinceLastLogin: Number of days since the last login.

- seniority: Number of days since the user registered.

- seniorityAsMonths: see seniority. in months

- seniorityAsYears: see seniority. in years

- countryCode: user's country

We defined "daysSinceLastLogin" as an indicator of latent users. We assume that users whose days since last login are greater than 180 days are latent users.

## Cleaning

### Data selection

Due to the large amount of data, we decided to randomly select 30,000 data and create a new dataset for the prediction.

```{r}
userdataset <- sample_n(userdataset_orig, 30000, replace = FALSE)
```

（delete the usefulness columns and the columns express the same things）

By inspecting the dataset, we found that the columns named "index", "identifierHash" and "type" do not make sense, so we decided to remove these columns.

In addition, the columns named "country" and "countryCode" have the same meaning, so we kept only the column "country".

Then, we noticed that character variable "hasAnyApp" is equal to "hasAndroidApp" plus "hasIosApp". Since we are not looking at the difference between users using "Android app" and "Ios app", these two columns are meaningless to us. Therefore we removed the columns "hasAndroidApp" and "hasIosApp".

Finally, the columns "civilityTitle" and "civilityGenderld" both represent "title". As the data type of the "civilityTitle" column is character but the data type of the "civilityGenderId" column is numeric, we prefered to keep numeric data type which is "civilityGenderId".

```{r}
userdataset <- userdataset %>% select(-2,-3, -16, -18, -19, -23, -24, -25)
```

### Data transform

#### language

According to the dataset, we noticed that "language" is a character data, for example "en" which is difficult to be used in the setting models. Hence we transformed it into a numeric data.

Firstly, we created a new dataframe, and we created 5 new columns based on this column which we named them "langEn", "langFr", "langDe", "langEs" and "langIt". Secondly, we considered whether the user chooses the language as their first language based on the raw data, true for yes and false for no. And we determined "0" for "False", "1" for ""true.

```{r}

language <- userdataset %>%
  select(index, language) %>%
  mutate(langEn = ifelse(language == "en", TRUE, FALSE),
         langFr = ifelse(language == "fr", TRUE, FALSE),
         langDe = ifelse(language == "de", TRUE, FALSE),
         langEs = ifelse(language == "es", TRUE, FALSE),
         langIt = ifelse(language == "it", TRUE, FALSE)) 

userdataset1 <- left_join(userdataset, language, by = "index")

userdataset1$langEn <- ifelse(userdataset1$langEn == TRUE,1,0)
userdataset1$langDe <- ifelse(userdataset1$langDe == TRUE,1,0)
userdataset1$langFr <- ifelse(userdataset1$langFr == TRUE,1,0)
userdataset1$langEs <- ifelse(userdataset1$langEs == TRUE,1,0)
userdataset1$langIt <- ifelse(userdataset1$langIt == TRUE,1,0)

```

#### gender

We observed that the data of "gender" is also a character data, such as "F". So we processed the "gender" data the same way we did with the "language" data。

We created 2 new columns based on this column in a new dataframe, whcih are named "genderFemale" and "genderMale". Then we filled in this 2 columns with "ture" or "false" by the data in the column "gender" and used "0" for "False", "1" for ""true.

```{r}
gender <- userdataset1 %>%
  select(index, gender) %>%
  mutate(genderFamale = ifelse(gender == "F", TRUE, FALSE),
         genderMale = ifelse(gender == "M", TRUE, FALSE))

userdataset2 <- merge(userdataset1, gender, by = "index" )


userdataset2$genderFamale <- ifelse(userdataset2$genderFamale == TRUE,1,0)
userdataset2$genderMale <- ifelse(userdataset2$genderMale == TRUE,1,0)

```

#### hasAnyApp

From the dataset, we considered the data "hasAnyApp" is a logical value. So we transformed it to numeric value by setting "0" for "False" and "1" for ""true.


```{r}
userdataset2$hasAnyApp <- ifelse(userdataset2$hasAnyApp == "True",1,0)
```

#### hasProfilePicture

Similarliy, we used "0" for "False" and "1" for ""true" in order to turn "hasProfilePicture" into a numeric value.


```{r}
userdataset2$hasProfilePicture <- ifelse(userdataset2$hasProfilePicture == "True",1,0)
```

#### latent

"days since last login" is the basis how we determine a user is latent. We assume users who have been logged in for more than 180 days as latent users. We then converted this data to a numeric, defining 0 for False, 1 for True. 

```{r}
userdataset2$latent <- ifelse(userdataset2$daysSinceLastLogin>180, TRUE, FALSE)
userdataset2$latent <- ifelse(userdataset2$latent == TRUE,1,0)
```


### Remove unused column

After combing the data, we finally got the dataset "userdataset2". After the above data processing, we observed that there are still unnecessary columns and we prefered to hide them (which are index, language.x, gender.x, language.y, gender.y).

```{r}
Userdataset <- userdataset2 %>% select(-1, -3, -12, -18, -24)
```


## Missing value

There is no missing value in this dataset.

```{r}
check_na <- is.na(Userdataset)
sum(check_na)
```


-   Sources
-   Description
-   Wrangling/cleaning
-   Spotting mistakes and missing data (could be part of EDA too)
-   Listing anomalies and outliers (could be part of EDA too)

