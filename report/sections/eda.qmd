# Exploratory data analysis

```{r, echo = FALSE, message = FALSE}
source(here::here("scripts/setup.R"))
```

```{r}
install.packages("summarytools")
library(summarytools)
library(DataExplorer)
```

## Data inspection

### Data check

In this part, we focus on the structure of all types of data, and simple graphical analysis. It can be seen from the results that the distribution of a lot of data is unbalnce, so later, we use different charts for analysis in terms of different types of data.

```{r}
str(Userdataset)
summary(Userdataset)

print(dfSummary(Userdataset,style="grid",
                plain.ascii = FALSE, 
                tmp.img.dir = "/tmp",
                graph.magnif = 0.8),
      method = "render")

```

### Data Attribute Modification

We will divide the data in the data table into two categories， numeric and factor. We will attribute the columns "country", "civilityGenderId", "hasAnyApp", "hasProfilePicture", "langEn", "langFr", "langDe", "langEs", "langIt", "genderFamale", "genderMale" from change numeric to factor. The attributes of the remaining columns are changed from integer to numeric.

```{r}
library(purrr)
library(dplyr)
library(DT)

Userdataset <- as.data.frame(Userdataset)

Userdataset_factor <- Userdataset %>% select(1, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21) %>% colnames()
for(i in Userdataset_factor){
    Userdataset[,i] <- as.factor(Userdataset[,i])
} 

Userdataset_numeric <- Userdataset %>% select(2, 3, 4, 5, 6, 8, 9, 14) %>% colnames()
for(i in Userdataset_numeric){
    Userdataset[,i] <- as.numeric(Userdataset[,i])
} 

        
Userdataset %>% datatable(rownames = FALSE,
                     option = list(scrollX = T,
                                   pageLength = 5))

```

## Data description by using descriptive statistics and graphs

### Graphs for "latent"

The goal of our project is to build the model to predict whether users are latent on this platform. So here we make a comparison of users with latent status and non-latent status.

```{r}

latent <- Userdataset %>% ggplot(mapping = aes(x=latent,fill=latent))+geom_bar()+scale_color_identity()
latent

```
As can be seen from the figure, the data results are extremely unbalanced. However, the result of generating this graph may be caused by our random screening of data. So we will try to use group selection to improve this.

### Graphs for numeric variables

#### Bar-chart

We use bar-chart to display numerical data in order to see the distribution of data.

```{r}
#Continuous Variables


Userdataset %>% select(productsPassRate) %>% 
keep(is.numeric) %>% 
  gather() %>% 
  ggplot(aes(value)) +
  facet_wrap(~ key, scales = "free") +
  geom_histogram()


```
As shown in the figure, since most users do not have this data, the data is extremely unbalanced as shown in the figure.

```{r}
#Discrete variables

Userdataset %>% select(2, 3, 4, 5, 6, 8, 9, 14) %>% 
  keep(is.numeric) %>% 
  gather() %>% 
  ggplot(aes(value)) +
  facet_wrap(~ key, scales = "free") +
  geom_bar()

```
As shown in the graphs, since the result of each variable is extremely scattered and the difference is too large, we cannot visualize them well.

#### Box chart 

```{r}

Userdataset %>% select(2, 3, 4, 5, 6, 7, 8, 9, 14) %>% 
  keep(is.numeric) %>% 
  gather() %>% 
  ggplot(aes(value)) +
  facet_wrap(~ key, scales = "free") +
  geom_boxplot()

```
Since the results of the bar chart are not obvious, we tried to make a box graph to see the difference of the data. However, due to the imbalance of the data, the results are not satisfactory.

### Graphs for non-numeric variables

#### Graph for country variables

Concerning about country, we created a new dataframe, named country. In this list, based on the country column, we create a new column that counts the number of occurrences of each country in the Userdataset. The new column represents the number of users who are in that country. Next we use different graphs to express this part of the data.

```{r}

# Bar chart

country <- Userdataset %>% 
  group_by(country) %>%
  summarise(user_count = n())

 p1 <- ggplot(data = country,aes(x = user_count, y = country))+
  geom_col()
p1

```

From the figure, we can see that the distribution of users in different countries is not very even, and because there are too many countries, we decided to display the data by using heat map.

```{r}

# Heatmap

library(ggplot2)
library(maps)

world_map <- map_data("world")

country <- aggregate(user_count ~ country, data = country, FUN = sum)

country_map <- merge(world_map, country, by.x = "region", by.y = "country", all.x = TRUE)

country_heatmap <- ggplot(country_map, aes(x = long, y = lat, group = group, fill = user_count)) +
  geom_polygon(color = "gray", size = 0.2) +
  scale_fill_gradient(low = "lightblue", high = "darkblue") +
  labs(title = "User Count Heatmap", x = "", y = "") +
  theme_void()

# Display the heatmap
print(country_heatmap)

```
From the map, we can see that the users of this C2C website are located very scattered, mainly in North America, Europe, West Asia and South Africa. Among them, most user accounts come from European.

```{r, message=FALSE, echo=FALSE}

# mosaic plot 删掉

mosaicplot(user_count ~ country, data = country, color = "blue", main = "Mosaic Plot of Countries")

```

#### Graph for language variables

Considering languages, we display this variable by using histograms.

```{r}

a <- unlist(Userdataset$langEn) 
langEn <- sum(a=="1")
b <- unlist(Userdataset$langFr) 
langFr <- sum(b=="1")
c <- unlist(Userdataset$langDe) 
langDe <- sum(c=="1")
d <- unlist(Userdataset$langEs) 
langEs <- sum(d=="1")
e <- unlist(Userdataset$langIt)
langIt <- sum(e=="1")

language1 <- c("langEn","langFr","LangDe","langEs","langIt")
number <- c(langEn,langFr,langDe,langEs,langIt)
LANGUAGE_DATA <- data.frame(language1,number)
p2 <- ggplot(LANGUAGE_DATA,aes(x=reorder(language1,number),y=number,fill=language1))+geom_col()+
  geom_text(aes(label = number), vjust = 1.5, colour = "white", position = position_dodge(.9), size = 5)
p2

```
We can conclude from the graph that the majority of users using English as their first language, and the least number of users are Spanish.

#### Graph for gender varibles

We also use a histogram to display "gender" variable. It is obviously that female users are far more than male ones.

```{r}

f <- unlist(Userdataset$genderFamale) 
genderFamale <- sum(f=="1")
g <- unlist(Userdataset$genderMale) 
genderMale <- sum(g=="1")

gender1 <- c("genderFamale", "genderMale")
number1 <- c(genderFamale,genderMale)
GENDER_DATA <- data.frame(gender1,number1)
p3 <- ggplot(GENDER_DATA,aes(x=reorder(gender1,number1),y=number1,fill=gender1))+geom_col()+
  geom_text(aes(label = number1), vjust = 1.5, colour = "white", position = position_dodge(.9), size = 5)
p3

```

#### Graph for other variables

We also use bar chart to show all other variables.

```{r}

Userdataset %>% select(civilityGenderId, hasAnyApp, hasProfilePicture) %>% 
  gather() %>% 
  ggplot(aes(value)) +
  facet_wrap(~ key, scales = "free") +
  geom_bar()

```

We can see that the majority of users are with "Mrs" titles. Only a small number of people have downloaded the relevant app of this C2C e-commercial platform. Besides, the vast majority of users have profile pictures.


#### Box plot

As for non-numeric variables, in addition to the above classification analysis, we also use box plots to see the data distribution.

```{r}

Userdataset %>% select(10, 11, 12, 15,16,17,18,19, 20, 21) %>% 
  keep(is.factor) %>% 
  gather() %>% 
  ggplot(aes(value)) +
  facet_wrap(~ key, scales = "free") +
  geom_boxplot()


```

## Examination of the relationship between variables

To observe the relationship between all of the variables, we made the "Multivariate correlation scatter matrix plots" and "Correlation plot" for numeric data.

and "Mosaic chart" for Non-numeric data.

### Multivariate correlation scatter matrix plots - Nurmeric

```{r}
library(GGally)

Userdataset %>% select(2, 3, 4, 5, 6, 8, 9, 13, 14) %>% ggpairs()

```

### Correlation plot - Numeric

```{r}

UserdatasetP <- Userdataset %>% select(,-22,-13)
plot_correlation(UserdatasetP, type= 'c', cor_args = list( 'use' = 'complete.obs'))

```
从2个图中，我们可以看到各个numeric variables之间的相关性。显而易见地，Var.seniority和其他有变量基本都没有什么相关性。而var.productsSold，socialProductsLiked，socialNbFollows和socialNbFollowers之间的相关性更强。

From these two graphs, we can observe the correlation between the numeric variables. Obviously, "seniority" has basically no correlation with other variables. Whereas "productsSold", "socialProductsLiked", "socialNbFollows" and "socialNbFollowers" have stronger correlations among each other.

### Mosaic Chart - Non-numeric 

We use mosaic plot to show the correlation of each non-numeric variable with latency. 

```{r, message=FALSE}

cat_table <- Userdataset %>% select(10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22) 
plot_list=list()
for (i in 1:24){
  print(mosaicplot(~ cat_table[[i]] + cat_table[[11]], 
                   data = cat_table,
                   main = "Mosaic Plot between latent and each variable",
                   color = TRUE, 
                   ylab=paste0("variable_", colnames(cat_table)[i])))
  Sys.sleep(2)
}

```


# Next step

About the data:
1. Due to the large size of original dataset, running memory was insufficient during data processing, so we randomly filtered the data for analysis. In order to ensure the structure of the data is consistent with the original dataset, we decided to use group sampling (considering countries as a grouping criteria) to select the data.
2. Whether the original data or the data we selected, there are a large amount number of latent users. In order to obtain more accurate research results, we will consider to segment user types (set refinement indicators) in the next step, such as latent users belong to the value of daysSinceLastLogin between [90, 365]. While those who have not logged in for more than 365 days will be regarded as missing user. Which means they will not log in to this website by default in the future, so that there is no need to deal with them.

Questions:
1. When processing the data, considering that we will use different models after, we replaced all text data by numbers. Is this necessary to do so? 

2. For the country column, we keep them as "character" due to the large number of countries counts. What if it do not support the "character" data when we set models after, how should we deal with the data of the "country" column?

3. In the section of displaying numeric data, we consider the results of bar-chart and box-chart are not very good. Do you have any suggestions for visualization? For example, what other charts can be used to better display numeric data?


4.According to eda, we noticed the correlation between many variables is not very strong, and we are afraid it will be difficult to work the project out. Do you have any suggestions for the next steps?
